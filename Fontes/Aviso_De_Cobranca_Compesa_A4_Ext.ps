%!PS-Adobe-3.0
%%Title: AVISO_DE_COBRANCA.cdr
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 11/18/2011 12:20:32
%%For: Aziel
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Phaser 6180N) (3015.103) 1
%%LanguageLevel: 3
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 12 12 583 830
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
[{
%%BeginFeature: *XRCustomPageSizeCorrection True
userdict /4.3PPDCompliant false put
%%EndFeature
} stopped cleartomark
userdict /Pscript_WinNT_Min 100 dict dup begin put
%%BeginResource: file Pscript_WinNT_Min 5.0 0
/b{bind def}bind def/|{def}b/LH/showpage load def/min_initialize{begin userdict
begin}b/min_terminate{pop end end}b/Pscript_Win_Data where{pop}{userdict
/Pscript_Win_Data currentdict put}ifelse/setjn{{statusdict/jobname known
{statusdict/jobname 3 -1 roll put}if}stopped cleartomark}b/colspRefresh{}b
%%EndResource
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
Pscript_WinNT_Min dup /min_initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *XROutputMode HighSpeed

    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Collate False

        1  dict dup /Collate false put setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRColorMode Color

  1 dict dup /ProcessColorModel /DeviceCMYK put setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRRGBImageType Standard

  1 dict dup
  2 dict dup /Type 26 put dup /RGBCorrection 3 put
  /DeviceRenderingInfo exch put
  setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRBrightness Normal

    1 dict dup 2 dict dup/Type 26 put dup/Brightness 0 put
    /DeviceRenderingInfo exch put setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRRGBBCorrection Standard

  1 dict dup
  2 dict dup /Type 26 put dup /GammaCorrection 3 put
  /DeviceRenderingInfo exch put
  setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XREngineScreen Auto

  1 dict dup
  /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put dup /EngineScreen 2 put put
  dup /PostRenderingEnhance true put setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRRGBCorrection None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRRGBInputProfile SRGB

  1 dict dup
  2 dict dup /Type 26 put dup /RGBSpace 0 put
  /DeviceRenderingInfo exch put
  setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRGrayBalance True

  1 dict dup
  2 dict dup /Type 26 put dup /RGBToK 1 put
  /DeviceRenderingInfo exch put
  setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRTonerSaver False
1 dict dup /PostRenderingEnhanceDetails 2 dict dup /Type 32 put dup /TonerSaver 0 put put setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRColorTemperature TemperatureD65

  1 dict dup
  2 dict dup /Type 26 put dup /WhitePoint 1 put
  /DeviceRenderingInfo exch put
  setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRSubPaperSelection SMH

  2 dict dup /Policies 1 dict dup /PageSize 2 put put
  dup /DeferredMediaSelection true put setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRSaveBlankSheet False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRHalftoneMode True

    <</HalftoneMode 1>>setuserparams

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize A4

    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *MediaType Default

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRMSILeadingEdge ShortEdge

  currentpagedevice /ManualFeed get {
    1 dict dup /LeadingEdge 0 put setpagedevice
  } if

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Duplex None

    1 dict
    dup /Duplex false put
    setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRSlipSheetPrint False


%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRSlipSheetTray OFF
1 dict dup /SlipSheet 0 put setpagedevice 
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Smoothing True

  2 dict dup /PostRenderingEnhance true put
  dup /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put
  dup /REValue 1 put
  put setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 600dpi

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *InstalledMemory 128Meg

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRPaperTrayConfiguration None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRHardDisk False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRDuplexOption False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *XRColorModeSetting Color

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 72 V 0 0 72 72 V 0 0 ] def 
mysetup concat colspRefresh
%%EndSetup

userdict begin /ehsave save def end
%%BeginDocument: Pscript_Win_PassThrough
%BeginDocumentSetup
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW Version 15.0.0.489
%Option: Composite
/SeparationMode /Composite def
/SeparationPlateName null def
%%BeginResource: procset wCorel15Dict 15.0 0
/wCorel15Dict 300 dict def wCorel15Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE load/DocGrayScaleSpace xd DocGrayScaleSpace aload pop
begin pop/DecodeA where{pop DecodeA type/arraytype eq{DecodeA aload pop
/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE load
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE load/DocCmykSpace
xd}if}bd/set_rendering_intent{Level3{findcolorrendering{/ColorRendering
findresource setcolorrendering}{dup/DefaultColorRendering eq{pop}{
/ColorRendering findresource setcolorrendering}}ifelse}if}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch[exch/Separation exch dup 4 get
exch DocCmykSpace exch 0 4 getinterval cvx[exch/dup load exch{mul exch dup}
/forall load/pop load dup]cvx]setcolorspace setcolor}def}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{SeparationMode/OnHost eq{
SeparationPlateName/Black eq{SeparateInColor{convert_to_cmyk true}{currentdict
true}ifelse}{currentdict false}ifelse}{currentdict false}ifelse}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{pop pop color
aload pop dup 0 gt{SeparateInColor{pop convert_to_cmyk true}{1 exch sub
create_grayscale_color true}ifelse}if}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}if}ifelse}
ifelse}bd currentdict end def/create_spot_colorspace{load/alternativeSpace xd
/alternativeColor xd/name xd[/Separation name alternativeSpace[
alternativeColor alternativeSpace/spot_tint_transform_proc cvx]cvx]}bd
/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype ne{
create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd numColorants array astore
/alternativeColors xd/names xd[/DeviceN names alternativeSpace[
alternativeColors names alternativeSpace numColorants
/devicen_colorant_mixer_proc cvx]cvx]}bd/create_devicen_color{DevicenColorSpec
9 dict copy begin dup type/arraytype ne{create_devicen_colorspace}if
/ColorSpace xd/num ColorSpace 1 get length def/names ColorSpace 1 get def num
array astore/color xd currentdict end}bd/RegistrationColorSpec ColorSpec 9 dict
copy begin/num 1 def/ColorModel/Registration def/ColorSpace{[/Separation/All
DocCmykSpace{dup dup dup}]}def/names[/All]def/separate_color{SeparateInColor{
convert_to_cmyk true}{color aload pop 1 exch sub create_grayscale_color true}
ifelse}bd/convert_to_cmyk{color aload pop dup dup dup create_cmyk_color}bd
currentdict end def/create_registration_color{RegistrationColorSpec 9 dict copy
begin 1 array astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict
copy begin/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace
def/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0
0 0 create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9
dict copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def
currentdict end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{
/OutlineColor xd}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel
get_ps_level gt{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel applicatin)show 72
120 m(by selecting the PostScript tab in the print dialog, and selecting)show
72 108 m(document level from the Compatibility drop down list.)show flush spg
quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{
$fil 3 eq{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}
{FillOverprint safe_setoverprint FillColor/separate_set_color dexec{show}{pop}
ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st
{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/create_datasource{
currentfile DevicenImage not get_ps_level 2 gt or{/ASCII85Decode filter}if
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/set_image_strip_parameters{/stripRows xd/numPlanes xd/stripBuffer
$wid $bts mul $ncl mul stripRows mul 8 div ceiling cvi string def/readstrip{
DataSource stripBuffer readhexstring pop}bd/stripHeight $lly $ury sub stripRows
mul $hei div def/stripOutBuffer $wid stripRows mul numPlanes mul string def
/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid def
/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}repeat]
def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]def
/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul div floor cvi def numPlanes stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if $llx $lly
Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor/separate_set_color
dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}ifelse[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF
{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse}bd
/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq $ncl 1 eq
or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl 3 eq{
dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def/@cc1
load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch string
def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load/@cc3 load
/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp @ss}if}bd
/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{currentfile $dat2
readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop}bd/@cc4{
currentfile $dat4 readhexstring pop}bd/$msimage false def/ImageCompression
/None def/MaskedImage false def/DevicenImage false def/output_color_image{@np
$ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse
setcolorspace/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}
repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource create_datasource def currentdict end image $SDF{$dsf $dsa $dsp
@ss}if}bd/simulate_devicen_image{@np $ngx/colorantNames ImageDevicenSpace 1 get
def/altColorSpace ImageDevicenSpace 2 get def/tintProc ImageDevicenSpace 3 get
def/DataSource create_datasource def/stripRows 65535 $wid $bts mul $ncl mul div
floor cvi def 1 stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{1 $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs $llx $t_lly Tl $urx $llx
sub $t_ury $t_lly sub scale 0 1 $ncl 1 sub{@gs/inkIndex exch def 0 1
stripOutBuffer length 1 sub{dup $ncl mul inkIndex add stripBuffer exch get
stripOutBuffer 3 1 roll put}for[/Separation colorantNames inkIndex get
altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll tintProc}]setcolorspace
inkIndex 0 gt{true setoverprint}if strip_img_dict image @gr}for @gr}for $SDF
{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx/colorantNames
ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2 get def/tintProc
ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{/numAltChannels 4 def
}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{/numAltChannels 1 def}
ifelse}ifelse/DataSource create_datasource def altColorSpace setcolorspace
/stripRows 65535 $wid $bts mul $ncl numAltChannels max mul div floor cvi def
numAltChannels stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{numAltChannels $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1
sub{/pixelIndex xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}
forall tintProc exec numAltChannels array astore/pixelAltIndex pixelIndex
numAltChannels mul def/posColorant 0 def{stripOutBuffer pixelAltIndex
posColorant add 3 -1 roll 255 mul cvi put/posColorant posColorant 1 add def}
forall}for $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale strip_img_dict
image @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_native{@np
$ngx ImageDevicenSpace setcolorspace/scanline $wid $bts mul $ncl mul 8 div
ceiling cvi string def/readscanline{currentfile scanline readhexstring pop}
bind def $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType
1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl
{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource{readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}
bd/output_devicen_image{Level3{output_devicen_image_native}{
get_simulate_devicen{simulate_devicen_image}{output_devicen_image_alt}ifelse}
ifelse}bd/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string def 0 1 $hei
1 sub{currentfile scanline readhexstring pop pop pop}for}bd
/disable_raster_output{/output_image load/output_image_original exch def
/output_image/skip_image_body def globaldict begin/bSkipDeviceNImage true def
end}bd/enable_raster_output{/output_image_original where{
/output_image_original load/output_image xd/output_image_original undef
globaldict begin/bSkipDeviceNImage undef end}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
/#copies 1 def
gsave
[{
%%BeginFeature: *Collate false
<< /Collate false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *NumCopies 1
<< /NumCopies 1>> setpagedevice
%%EndFeature
} stopped cleartomark
grestore
wCorel15Dict begin
@BeginSysCorelDict
CheckLevelCompatibility
/$dcm matrix currentmatrix def
-0.15789 0.07512 Tl
@ssa
1.00 setflat
/$fst 256 def
userdict begin
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 32 /space putdup 41 /parenright putdup 77 /M putdup 117 /u putdup 100 /d putdup 111 /o putdup 45 /hyphen putdup 115 /s putdup 101 /e putdup 69 /E putdup 110 /n putdup 114 /r putdup 231 /ccedilla putdup 73 /I putdup 120 /x putdup 105 /i putdup 116 /t putdup 78 /N putdup 227 /atilde putdup 250 /uacute putdup 109 /m putdup 65 /A putdup 98 /b putdup 97 /a putdup 68 /D putdup 99 /c putdup 104 /h putdup 67 /C putdup 79 /O putdup 83 /S putdup 85 /U putdup 76 /L putdup 84 /T putdup 44 /comma putdup 82 /R putdup 86 /V putdup 201 /Eacute putdup 48 /zero putdup 56 /eight putdup 49 /one putdup 57 /nine putdup 53 /five putdup 199 /Ccedilla putdup 211 /Oacute putdup 80 /P putdup 88 /X putdup 202 /Ecircumflex putdup 46 /period putdup 119 /w putdup 112 /p putdup 108 /l putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1EF822522FB46BBB6ACFE714F3C609AE9CD2A0785F05FB58D8B2E73ECA0DEABE35A12BC6B28ACEB3492090
F71D4CFB0B6350840CA05657BD3B1841B81BA0B51C58DAEA602109A58FDAD7A47722F95093FCB37B1D4F8C12C157FDBF3E2EEEEB48D038A025C511FD5FF9C45C
DB7D5AD7ED28B578A379F04FF6B096AD24FEB1E154260DABA2A9D1DE44FDA0FEEBCDD5206D364C53C93C02CE28080944126401EB5C371261FC4325833FC306DD
90FC860AFB3AD4162FB1390C3614D7323F9B739DD34F4B5DA1A53E076D29EE87F1B8DD63CBDFB9073E06131A79E45B27D10D701BEA781289D089363048F0F3C6
6750F7058274E8302706C7C00EC675BF31FFCAE369F472D50D14ED5E0829A5A6B96837130E3C1494AE93DC2F6F2B8DAA1E37763EFE071B830886007128C3E39F
4FD1AB453B09EC912B556F2387BC0C277DEA12EB94A02A5B49002F7CE2F6FB337DBFD646669218993D0E1BA9FB9181B415E052B514DF168EF0B8753D1B7D3842
E92003E3EBE715E5192FE1F3218F241BA2ACEE070D841AC7A7F12B92B4DD3E9BD764B29D44EF4CF3D4D0929A206D7ABF840F928FDA2326096FE945BAD2F17FC0
8D073884A044BD754D8CC9B4C7BAFABA96B967C97364F4B3A273E993F953C35A19BEB844D65CFA457AC133ADD309CB28D98464E994F2027004BAF35585EB49D2
0601725C6D6DC2D7C6F2138AC7B4243A8D727A8FE39BC9FCBA88D8659AEC77E87448BCFC1AEAA09609B0287C4CDDEBBC8773354234CDEB27B273371C563D1A89
52789A2200F119C6BF89C11A0242CB8CABA5B089285335D8B3840635527DEF87FF9545113234A59124BFDBDA922A252C9F2058DE0C5D30F67D544498F2255D77
2AA1530B8ADB25C722578DCD0A1A14C3740953CC2F0F44BF6D137B618DD19EF8D106D7CFC3983488E9C4EE2242966C568293BFF21A567D2E185049D5AD7D57D1
BA96BB08D6357F93E6A8E4520CADD168DC4E977924AD5C18F5B2C5DE96EEAE1602B3FD5BDDADCDC872320EC7AE81C3A8C472309145070031B0E00CED3C14047F
0B556F9726D80082304369335A3B619FA274E81B915A68EF204CB1648895FC28F83CA355DD21363027E760CD17A1F776F639C2927ECBD3C38D7D67545B0574FB
AD76CAC3123DF39F312C6671DAF11B52945FD2C680FB09FD97053D74B8859C1BA6EE79AE58B78312204F32C341BD76062686792EC88402BD9848F3F78E3305DA
C0E5688B72F19F394DA513B79C34813DBA11CE1153E1B85D31301A41140ED42AF43A733F6FE8D2752C1B53D6FAB5CD45BAF53C3BFA1771DCBEDDCD98AAC3D611
D19317215FFCC9FFBE22054439D6BC00EEBEE1D37C724EB2EB756205DEFEBF7794ECCB28890CDC0D2F03EB01B2E3B4754CEE426B1652290FDC327CE749127AC4
E03FC9A9BA5CD6D1FC255E6C8E4C1AC814440C6182AA716B8FF1200651833818C8CE02CFF3562415E345D10763C7C7D639EBC242FC45D1712DB62D195696AE42
CCB705DE0097F8360AC23F5B770DDFFCF8490D2BCFA141A6D43B10AA7EF2274DED8A77630CC1178EEACDFEFF0C561414E9E445DD11EB7C9F512EA6C974B69EE7
50BFD2E44B0EFAF551A7971B7B2629DAEEB5A30441E296EFEB4D5E08A6758F8EF108F9DDC0B1259C87FC134D471AA728AE58B62C390F4A844D465BE3C5DD0860
5601157FF6B61C98F6A2025DC39BE194CBB95B9749F7FB34A8670E6482EF96E09C1C8C2E690B9BF5B884C345F8961A40329900D005ADD3754E9B1F1FFCE4E73D
C1F5AF5ABB1D1CD934037013C164C9EED819B44BD40B741AC388E440951E73E8D745AEFFA1F477AB533A92129B5954FEB14EECEDD85E1795D16B3DDD290D7F69
365E06EF83A5D2BAFD47B14290FC786CB744D3D16F5C7877B43402D88887EB6CE510C3B10623AA7F3C4ECE8279A552FFE578279A2912EBA8E67D24695A5185DE
9DFBD9BBE2F7F255ED107EAB1D34F6A40B779A45E8089DADE3225F330E3E286B5F1F25362AA23C755834CDC6D0DEEB592FE24A33DB1B1D500680B0A715A8F204
A8E358CA03F0E3F11ECDE6F52E7BC6B6B160FD6003AC105EF2E9D5F753A9BB87908D9C42729BFBDEC84995358B1344DBA96280AB38FCB79EE10547AF5C16D7E2
49D1EB5FBEE7D2D6D110D58673128F80A54CE15D55D1A96C8FE5C1804C2DE267DA7898F5167971FDB0762F65C4456AEE615411313DDEBD114C7FD494711BCF07
574124BEB90C345B6D0AC22C1DA17B9B6A91DD0A87C5CB86C31D006E4A1B0B93953627DD6CDFA70B4DF467F06EC2CE2A1B176236FC8AB3962BA39AC7A589517F
2C19204E1A329488BEE56AE7FFBF73DDA3B31DE7BEEAEA9C89CC5C6EC3BD8BE3C99B041F0C3B98836B0C1944E72F98CAECD612C64538A776E3512D9E860E618F
B7335834D43AA6CD38E82AE217B2206B4E033873F30B41597E5425B26F8D32AB9DE1B978BBB2EE3CF94ACA02AC699452F376301841C93CEFEAAF82EE12711833
2048ADEA58D2716A86ACA279D19AC804FE38327C70E9360AECE8CBC3052CF06E5F445D08BB99C36E27656FAB3AEA8FBFC8FFE29ED8BD565D4C3DC63F6F73C1E3
CA0C9CB89C206738F5B527A099CF4E85BEBEBD176A6D3979B90BF4ADAD92FA06C843DD700E059AD26C8DA987442505E86267D8FEFDB0745F9882A7B498E8BE8B
8CA89B8868F9EE1418EA28D63AF2134D98E7372F248075730B1607039F518FAFA6AF60299861D4B096D105839A22F06E21B9DF51C5BC9484004E06FEC509000D
C873531D91C484B0969BD44697DDE2E2109688E7737FC996F6F655A9A711BCE2D24F44AB978545BE18CC88C0A4363A5C0F5500F613C72B532837B49386785E5F
DDAB21DDE6B62BAA7D41AD3E3195785695C18B5CFCCCA4AE7C570A6B314BF97E55636AE3C0BB3641F5EAE521D0A25274ECE82F65398F092C490397DCCA625EA6
9A7DBD0B03B067D6F5113A78873213DA5AA879EE7E89D297FCB4478DB8507E5855F51F5D4B79A7CF4B2724663AA6BDF5C6691D7FE55B1297E7B230A8E6CF32CE
2AF0E5633566261DADE6CAA7463EFB2D2C314DA496441A33DF6186DA678C6818245B6555E7079A74BAFF0AA0C4FD68B8D181E4E18499F8A0F76209B1C094A220
F88F863A3253EF39CA56B3362A16AA50BB5F33484FA79D58BA7294A816DEA00F64EFE41E6C02BB7375EBCC4CAA4A97A8BE3B593E9CF0BE6145E6D126E5E6145D
DC163D547E833C397B49B2EC2556E6F82317F90B7761EA06627796382899DE068C762226CCB44361DC902404B09094C93B77B9498067BA378071D1115D40E80F
B0DF008FD7DCD000C8611EBB006A12DAD65061F6BB7070D6EE8F87C38811841499402619A8B1084DDCC9B61822637652844E2C54C2DDA8D6B27B76F89A65B40D
A3703DF26D81D7C931514CFFA27C9C2195FDC7031775376A36388240A0721FAC50F4DE947666FE62204C0F056E1347310C05E122B1B18546F2E76B92B8B72F9F
6542B0C2C145195F93F6DFC6B57C1F93F6C505D9E5B0607BDEEEC1E6BA3F78DDDE263C8191033C704F9E3B2D99039072764EF3A516FFD4302B0B161217E9438D
4B99FDEADAEB5BC90E1D6A55BBCCDE3675F206DDB6E523CECD5D1359083650F9A39832A663F1F791458B7AE71A2BDBD80C1B5B42CCDE7CED33187E9770910828
AFA91F18AF301101BF0245124B9328D0C1C2AEA25FA5868AB073F983B6F6FF15AA503BFA6B62F83D3261DAF568D07C6A0D2AF90AFAEEDE6283AB754DD5FE55CC
4F43C9A6C25826B476D97848910BBAD0137CACF616041A330235CA536DA6DAC8EE6D9997E4092F3B610BDEBAE55C2AFD2B94F606D4194935130F60BF181D5EFB
1C2A764FB4A3B2C79BFA5313D42DB962D23D504E441436BE44B30374D3F4E06FC63293D97A8AA5D39D2457AE9D756400819357FE789FA2BFC4C30EACE1AFE92E
46BCE88B0F7DAC0846E7591F87CF758D8AE3BDC28A87A47075B0A5A5DECDF8BEC74008B149DEA6B58678852AC58F1D9CDD867F1713806B99D1FFE293B34D3603
89FC92AE0FA225EC6C8D59DC9A1F0C0E4D7C4E4C1085D938E192A340C04ADA2BD091D31A0EB1D01C90D34AE7017876E8B8C7B0AA2E16584EFE770362A963625A
A7AA6A64D64D2DC45EC49E3D641E2FC7947A2A2978F1D56D16651E8C77F3A7A169CEBA1889EFD7307B849525F550F49D9D7FECC0CEAB8FFD14D5EDDE69174EF2
8E98C430A3E2B33E4F76D20FF338D26EC0611DA338ACEF451343E97CB522FCDB00C0B66C28DDAC557543F3BCB26CFC7E4DCD05191E074F08EFE467103C2E58D4
0ADB1F4CDD0A209B77759C23C77579115B14887DE14BB43B0E143E21E79D4CD196AE7116B727FEA8D3ED9C16C5834F82CCE27B20816D933560509182E3D8690D
1706BF0553285342E1B69040901FB92897701519D854A00B5ABFA8A96B8DC67F2CC8B1DE4F075EE4DFCEF86C97ED60286FC8DF2E395755C307313493B7991D96
39411FF74C7D3D8CF2E9A17C8F7D600E57ADFC5E7B4FB469D51F24333C8AB5074203C5E52E40E0B790A1DD56DFA79031CF82581840351AD17404BCFDB0F623EA
C6B25FC1C9FB8C2D9058A80E5C87B50CDCDB0B7E8CE6D1BA64D42E11A01D010A7E959229908A4A72A31E3B1EC909D641C08171D40310273011B698E761ED41C2
3C4AF095668420C4C5657CFE8C10923B5BFBAB0DBDEC9C9ABA9EAADE670102B96CA9D56E4879B4F2371E88B76B4C23C639A692BC62A50CB1B447B8C02D9EEC09
1C27B4C8AF1BCEB6B99859C251AFE5811E910A635355973C980B7AA1389061736E077E665B5CEE0AE5BE73A129F3B99BBD26449382C4A88347947BB58AE4D041
0D32B8FA06BBF5173C36239B12DF5C0FE4624C672DE33651EB41193DE9905275DDF51B1A09E49366F872719801391033B900D4122649C0B36586F26B9523E940
F3C780CFEFA58CE63A5C85B725D5432658A3F50B0828ED892F20303EB2CC5161275DC6A1B7ABB01F0259F566B237C4D598588752982FD8863BA71F00DA068A18
379FEF1C9B30DEE166C2683C19A0906FAF3FFD74E294D2B1E9509A7450C83EFB15FEB268910787F67CAE7237F66FE642CE0CFC02AE5E04EC0F64AC03251293AF
4541E77A220E427A68F3250784D66ECE3E483085CF3C139D576CFDCEB25AF3C12D4BC3E5D438430DE6298DFBA8E1EBCC5F244C85FA19C4981E78EFC120FAA1F0
10337712E8BC23F8D86CA223E452424665492A752D678B0D6F64B3370C7FBEA00EA479D60506EE65C9EB305CAF0AC797ADB9F5D94C49D800055AD657371A9E1D
DB067F988206F24A0C73FDA441296C5398603ED7C715871B16B5AB5B0A34592310A3E088A9D8C3C7AA8EB0E9BE02C2B1EE889458BBD08AF283356D352B81AA0C
C18D554384DEA7F43988592EC3A98662AAE9F8303470D0100D46B0E5643C72ABACC8E40E2FE9206F7E8CA2C40E3A93F357E0A5E428D5A9C51B9D677552ADFF97
8058F9733F833EDFA17D52B11EE4B1AF1D4685285957C10BE54C3B49DD052BDF635B55679FC730F370EFA41889A09BF22B69F989F65EDF131D5BD5BF52BF99BA
080AB319A384145F2669285CCDFE97EB9C2A1FEC284EDCCC46CAD946EA1B8FD0C0DBFFAEEDFDCE25DA0D9D4A064F94333F1458CECAB2293BE4E71D597AAAF7D3
917B1A29652A443524342DC32BD9C991D1943858F36040CEA6F2B760C27C48EC26A94D0D7A8373C19E18047663E473984BB52FD7F28D8E1BD303623974991C25
D0E6F2926BAC3F31FB353AA9EEA4ADAFEA1FD3AF29A01BCF1657F1202CE1808DB99E9906C58CB4D1074E98C1C3CEC7DEB2B719203D1EB5F7737D91943B76CA4C
448E91A018173DD5FB4019333F115BC498B335A0840E62A10A7860BD541323FD77CB24BB2F636ED34631C01BCFBA49B430AA2749434D0CC2C376647BF63BFC23
26B0C2810E93D9CAC1AD1BE842D6359FCC8C02AFCFEAB499B90C3AC9B95B7D0D7A552F514BC3D5D1F8A1937157201674BD7A6D9DCF44772821AA01ADA54887F6
94E89A7DC0CAC462DDD16E5776CF053FE147E9A580892DD554F850453F7453FA54D0D248F0F7090FF60CBF939A488FFA087EB94AF60611E31ADCD3739F8F23E4
4758CC407B40F1C899E06EDC80738F8ABBFF22B01B52D7E93E18E086FA961C2F86237C3A7A29BBBDE0559E8B1B4020855562DF49D71CE2861A890732E26774F2
270A4627E3E877B186F1C7FD26FD58E57D629842E16B5D64D68CEC39F53C76FA45BA3DC11CBABE7F9FD0C3603ED8F34BC8938D5E6E345DE5BA47CAFE7194D286
AC2F19846FFC9B698791C5C339BA2C55855BF3507A7AB3575696013F297B22694C1346488C2FD120A6186110B914D1CA8F3E57F93CE5894C263C21686917E64A
ED72BCED883B96FFA683910A2B8A40A466BB6DA6998F994F0255922AD61AD5212FC911849640E2C4F19B33F7270722F629BAA9FC0372EFC96CAFCA163D4B2E48
547AE937E383A26232D8B1172B85C8F889B7DA8AC4EBB508D053ECF3ED617150619C18750BA60DC1470CA4C5202980429A57DE2584BA1184E81EF6A470303585
9838F57182E320716D067647BB2E16B1FB3EC03B1FB359DCC5249CEF15B81A8BDCA9418D34304B28E0E4AA28BA0F6356AB763F17D842B4ADA3B392171737059B
4C8CBDB6110BD68494D56C468D2C3A511E90C13294498C797EAF9BF277DC64D1F474BE3EF74EB17BF074667B2413CBEC6A89253B31467D153A10208D8AC154FF
89AEDAE3CD6E490BACB60DAD05D602CDD0F3523ADE9542D107ACC86B8AD1BFF88F26CB63A117B2CD26E0CDAAEE3C2CB7A894939D89A6922C5CF52A232E356680
3FAB6607C5B64662E17D448103F158DA6B183AD03308613AF5EE320ED666E9BE6967A7A4712929363C3E3525183E542AF36A89049654CF7C1C3AA04134AD1F79
1AC346CFC761E7C4A6C07BDDD809B7022CE21E3933E6CCF80550554A40F03B0A887566C32ED5D6C2DC9860AFCC403B25B2EE096CF5B05CA7D076CA51D1748846
85F7986C9F2537FAE517506CB355B93D55AB04798301BD433DE6D6F3FD96D32E7D997ED43615180A96BEE6AC7D1BB8749E0999595867F8D2B2B6D8B00E16E0F9
1A68F042694AF0750A395B48382A853CB6B3C6B7A8759C93DBC55CBB43064F79D6993CFF79B9EF904026618C60645727B71460A9637BE0BFDA61DFB146C3D9BA
103B841EC88F443E0739DD769567A13C495D8B9030ECA9E4F9C4651BE5BF6F49D5788A9199DC1B8ECC2B8B7F8EB831C185F5F1B0225DB6A9D02C2A1B6B5F9022
D5FA4A2C5302620918FDFDA54B935048E0581993E24B1231ED6D8B57A63085464A5FDC40FD65293BA291A66A0F903DFDBFCC6E8019E46A37BF026E8813B51863
E7D082E0ACB7799EAB1C090FD7B14D2A077CD230E8BC76D78C6B5E1FD7A915EB6B05CD8218472ED90DE787FF85159559C171545CD4DC6C20A81C4F94492C5D3C
4D812070748464FE5418E84B2A9F04375378238A63ABAAAFF2BE8C50557C02D75DBBECF78DC059DCFC71D589D5AB1334BA87599DA961701E10BD2E0E5BE92C11
E255EF06944E21911C3B8DEED20305E87DB03DEEE88395330D9BFB355F8655E560318D7188F090D7D6B25D7CCF488F22C6C99A0B71CFA95A2C8CA9B89426A288
04EBE9E32297FDD7AE1AEE74F66C765D0D28399AE1576941DE2EF8F6ACEB6F818AB01D2E4D6CE561918D47E428E3D68F1BC5D0DB506117903AAB0A4340C29B7D
A0B2458B1E12E8B8BB8A14708A2482FBDDABF07FFD16139E637E4BDF3581ADCD107D0A372A6D048C892C8B85F122AED2B2D389400EE3BD8A6201B2590DFDF4F7
4840D3D3777D2174CB5D15DE710AA60E21A1029F3F1187AC34226ECF8ECA1A62F976D8A94CEEE9DAC479F10AC5937ED059D1775A42BFA1DCD57BDC5963268F67
6F9DC97714E32771D9CFB53D02D0919B6562478D6163F9F174E5BF535CF050639406A72226B2C41AD91FD8133EE40F89D69E98D5D31CF232EE366D2CE3798F48
40C055DC415FD099569B45B0A97696DC5028F2EE17A1F7E729E760EE85791DE58AF8C63BB06640EF1925839A73A2B1727FD36CFBE7DA0FB4E66AF7BFC248798F
72E06F5700DF3B5390935EF87F20A7E90E420475F9520C9501A0E55DB5DE3EAEAF3311260444E49103DFEB6EBB8F3914FC608AD5FB3DAF17ED26AAC1C45B31D8
B3914094B82980DFDA6142668FDAFE843FF9B6170AF726EF7DD26A72EB592F036CA320F7B8775501A942FC6ED104375700553EE871F87BE9D93B5A3EB31D2D0C
BBEC6094BA43BEF8D68FCDFA5CD9DF8F21BF41BA7BF970BE8EE6571AB9B5EEA3F2A28E42F5DB749B603F02737DDE2766784F2F8689F296AB3E63F83275CC9F17
C116B7F468C7FD425FF80C1AA93555C10FC043869595A64D4BFC90A22EECDF3722AF705C8D1ED2E329C427CF2ED9D9E0A6CE65218C971BAFE9111639B104F4F6
C83B1B2A32F621CFD8D5A7F99090D545AAACF9060B5A627F9B8554B0B0675319FC9AB8EA12C1A50225AD61656E47DCAFFFCDBBE053CD7DDAB27917DC8FC9B34A
0807F90D77354E343A3A12CA83A1D8F3D4196B6CDA7673CB56E4EBCDD9373BF7877C97C2ECDAAC0F5518636AFE66388BB81AC33020FE4D0736CD8ECC5EB1A63B
355EE5E44EFC1786364B881B852D17AC2271BB91D33028BD92E5ADD306ABED65CB2B9ECA5F231BF5205B9BFD9619552706585D239A4489D0E869493E6F4ED44D
B516CC5E37EBD4E12693248446AF1A9CC62FAFD4002D042ECF4D327942CB24D18C14695ACCEA884554FA34391A18526C533378D26F8F33828D918050FEE955AD
1624A0745BC7F412723E013605E07A14B034A0E1E7E9AD537FC3A1446117A17F8FF596F959C22EC718706072D26448BCF9B4B643FC30D815ADE5A290027D3E5D
84590C9F97C86739878A0D6BE0D19DEDB92FA2ED42BE07686739B28ECCF4393C141CF718ACDE1C91E3B18B046E0FB7027EF51AF587A0CC536E018E41219E9B0B
71DC78E5B40CB2663F0ED9CC93F3B30BBD40B3E4B2F9112E7D531A42F321C940EE46541E4E00556AB518E8E19D38267AD5A8AABAF80487B4C5D3A3A86D5D29C3
88A1DCE2B4C1CD06C03110D030FC1FA731ACADBEFFF6B3C54CCBB5481AAF4A86BA8AE23885B6AA2D0E8FA8E29A9E9C3EA5ED44E50E0347DC72C4EA894D4BB547
CB4902F9ED9714AF7F542FA5627F44EA32AB7921A44ABCB88480418E93CE56C94C1DF6719F394578BA911BCB23E64AD521C4945FD91CF7A95301987702D60EAA
E211210D239474FDF7A7652BCD702FEF5F72FC4081F23AC788C90BE8B3A5931636F0C1131FDDFB1B5022E351CFFB820C0649C10E227ACF5A2B0564B69DFB7A88
9CA0ADB12C475CA4EE48588FA4DA554CD0079C3C4AA6AA794A0DDBAF7DDCFDE08C490C86267961623B84395D2585C59BF0C5B9C6027C364EB860A3EFCD7997FD
3658DEBEA1E3098DC03040EB45300A3F56DEC8BAB695ED1FC266C58DA327356BC991E76E559E874B577F5230FFA92D92F8E1AB39276F91D64AEBC1279E3A7609
135E6444A3FA7BEAE19D8B2F5C25001A0154E202CC220A1C890099C8FA64E53D77982CEE52141EE64E8E7AE523F4ADA00342C88ABC0181EF52505027F8B9851A
D8D753D3301A4694490FBE0C60113C60476B41C50D0E4A3FEFDD3E07A5420FA7B3B961F61AF9395660E489377094EC0DCDF3FA0731A618AA2FDA3C8B8825B7CD
A09EA54E61FE23772F345EC58641BBEA4214615431DD891F263E6EC93C27246DE8F9AF2DDC571709A3F4EE5EF36469A8EB0E7562A60A2F4C237233AF460F576F
E6C05BBBF0A87489EAE561C17D2705A318990A3F481D93D691144C020C58922391988A5A9926F39A9C0B818C893EF6DEEB9C67B82251A65814197040977D1F09
B4999DDFF189E0788729981C23C6FD45FC73E5519B7C20840C335E3D5ED40EB96574D494C234A573FB22077DD70D8BECA4A40EC54EBA86D4A9774C9AA4DAD88E
CF2FE6483A8EFA6283187E4C1E49F81AE2A85708282D74909AEBED1633E353D4A08E6F402D3E40771BF8393DCAF9568D4E159DAFA21D25437B685AF3C1CDC1E8
588F615649D6DA2B7A07051F9A32F7F498A10A2969D2360DD7EC7E392E1C4A408061706162ED0B7DE8B82736A076AD2FE61E39ECCEB9BF3D9049CF6BBFEB44F6
FF946F933C0A64F5EC52321713879EF9D62058457B31F778D1FED920D95C53A03430AF2B790B3CFC5EC0F2071FF32A6A8A43187C145A52B51637B4AC7F523B40
1422CBD5C04E8C1A4B20C21C12CB72BAB5C82420AB4B5BCFEA3E24E34861E146B9AA208CCA73B64985F6DEC7543D0F5B21C1D67CBD543C7CD8E03752ACB160D8
08402D25
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 
750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 
222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 
333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 
549 333 333 333 576 537 333 333 333 365 556 834 834 834 611 667 
667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 
556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]
CorelDrawReencodeVect /_R231750-ArialMT /ArialMT Z

%%BeginResource: font ArialMT-Bold
%!FontType1-1.0: ArialMT-Bold 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 77 /M putdup 79 /O putdup 84 /T putdup 73 /I putdup 86 /V putdup 32 /space putdup 68 /D putdup 65 /A putdup 69 /E putdup 76 /L putdup 85 /U putdup 199 /Ccedilla putdup 195 /Atilde putdup 101 /e putdup 108 /l putdup 97 /a putdup 116 /t putdup 110 /n putdup 100 /d putdup 105 /i putdup 109 /m putdup 111 /o putdup 58 /colon putdup 48 /zero putdup 56 /eight putdup 49 /one putdup 57 /nine putdup 53 /five putdup 80 /P putdup 103 /g putdup 117 /u putdup 99 /c putdup 33 /exclam putdup 118 /v putdup 112 /p putdup 114 /r putdup 233 /eacute putdup 115 /s putdup 231 /ccedilla putdup 245 /otilde putdup 98 /b putdup 46 /period putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1FAED18949E4947C2A4D800E7107448A7AD569049629E67FAA9041D839DE9ADB031EAC03B1C5CA184B77B2
F90E0D0B6070FC3FD6BC908BBA2F806689D4812AA96888ADA8D79CD58306FF2219AC9792851F085D968AB1D6BAA864BC5FEA3EFC4EA0D4CEB5E88F1C8BE63479
EEE85FA5B26C597AA1371CC4449E0D770B31F591EEE4B8FBFCE72741630EA3AD3273F2A16EA282875F2A3DB1467F64CC9C163FC5D9735456BD87FDC4F410A7BF
8B26E05FED693FC43076F63171738E07A5B60C6D323A99BCDDDA0C79123D792724DFED2101AED181F3CDF78DDFC51F5FEBE6E8B0E43FF93E7086A34F9686FCF9
A8483DF35B23A6612CF1CFAB7BF184E3B3D8AF3DD2C24EB531CCB0C46760FBDB8CE1FEFB71E188021CABE81645EBDFA442A704A8FD29193C1D2AB28CDD78D61C
F5DAF3A721921194961C4269C3FF4CE0C23C20367A2CE6B60B77B03297CE671D9A0493B063C9FD3A42EF998D40048F9AC15652FDA7D2BC97EA7A92AD88B953D5
1FDB031B5CF93440D28F75F4B69774AB7E9BCFB9731E8E68A6513ED63DD1A8B8E192A47A757EC38174BFAA13DF5D0C0AEDB6D444748ED148F8373160C3E9F337
58C5E7A8C236DB283B8E15A685E248DAAAE85F850D52370A884DB8013F1B1072FFE466CFD92021241BD140777388C01B90B5A58E84A061D9B45F8AEA493B9423
925FAE845D64F2926187674DE98C5323E6F285D25839DE06E789ACE75B3A440A939C41686822F0D88A6CE33A437459A96E0010238D5D84A371C731CF99999DC2
FCC99600111A3E7267C058DABE8E1CB3F63E90251629DED7946EEFC8CC251C4C038D516FC5D7DC2671B6BB0E580D04CC99928BF8233B3DE20A8E8E9B0C67E18F
B54890EF3FC79F20918B37F989D4827F6C1726819D10FD64E15754BDA73C044ED44520E6162971C44AC87A6432A0201BA893CAF15542DA346049C156389C3A10
74D8BD1B60C8B7AD6846668CEE2E55F07E7F3AB89447937BD14E30A9B27AF658EF9200FE6341774D46B5399990B1C247270927D1077312384B5A56DD28573746
6841CC965FC14A9959C363E7536A8A0A403253558B8DAEA6B15290C363C38FB87B1BC79059F714BF485FF1808D299809012C5F90E5F118FF138994F71C40EF9E
166F9E3B722B0EC4A4435749625EE2C12EB9982D6AE5F3D1ECBEAC5ED641BB077DF6D162D0A1F816B9035103A57BF5C8BCEA9CDAC9162357430C6BDA1F5D0F46
00802326BED18496C81628AAF3B0A44630A6638D711A16B2BEA050A88C99884324A0991E8842D76DAB799AE273EE14D9D5FAC22A06313E6529E1B8FC7228FBA3
CF53DFAC28140F6E4F1C902AFC68D3C765E328371AD376ABEAE19B89A23DED3B4BA99A774C184D82CE86A95C7527DD76F7175D12261D96DF934EBDF9A5552415
1BE84B89218F0FF94DC8D427CC41EFE47C6DC31294A667213EBFF284BDD848453613F3C4AC6E812D2919CEC9D6DE1125D1DC9C0FE9E61ABC87FA3AAE86597382
9251E4F738094F9AE33604FC6C0420920CB17F8073B45B7F599A7CF0C23A48DE0DDBAFAE15FE9288EB9577F86847765244FEFA4361D381FE2394D5C579A0241B
B1101910E33BE4699DEBABC58AFE10F68EDA2101E817032F13CC64B95DEE8C93BC6B818DA6C38C75DA4DDCE4B042167CC52EC7D63B96BA6ABB700F87F84746B6
4FD65D36A1DEE1A879E3480B54B2FE2FEF1A5BB186818752C67C04560550B2335F6ED3963FFEBC6757E671080842CABE16ED85DED4439C5B01567590E845B6EC
B4B40CBD787F5D396055649A2065E0E81A2F1C31A1CBC06F81139A5D6C02A33680E8D2E6FD249D8ACFD365F908991B815129904E16FE6DFB8058BCC50CB454A9
0E18157A7B0564EC0083BBDC896D40FD4895C3C1C8A065D9BA8F23880C7176923E8A59C5B76524F297D16B782A0D94C3323F70E749B3648A69F4504C66140543
8B52B9FF9430842104AB60246496D0FC37A96BBD83DF6D67B9409F155D89302E0E1259502DCEE442E693916EB9878C0ECED36464FF2CD4949ABD2F8914994271
122FDF410C3695F7A2E888A6322E3E9F5A1F572471DC7120AFD1D58B8D4B4E301BC2E70B78D43BE2CF1D0E8228FE0EE5FCE9823581B9956AE2E1B8A79BF9807D
0C83F13C4F66F9E9009B7A3A64CB7AE8B241E61A9599087FEC523326A40B45E3CBE024F106310EBB6CA2C09828ED5FA78115E054C8D884B6E9B0082D032D5795
FC539D6115155ED47DD6FE9DD0F90F2F1152C6EA7EBC23D43AA1FB916CC72B5EBB99F6CB0D6732BD4C4C11485A0A3F6F32B5BC13E34756BEEB619CFEA53FED6F
A8159587E55EB8409421FDEBD054AF152C96239BEDA785539E30D3E1E0D4AF0AD5ED71C849D506AB2C818FCDD25AFF97BECEF26CE27DD8BB4076B4E825D83F3D
326020E9FF5B64F354F0507E3B28DC155CCCAD2463CB7C89300AEAB48B329B07CB91E2BB7CDF86B659AED73E0FB7E018A7059DE680C8EC34C2E070C67BC0CF28
328C25A43A673F1467DB09B7B2D8CE1A9259C018806E6519C91D06F3B717B5768F5A3F86D5E5BA5F9DA93188E5CAA2F698CA8A8BF6FABBDED4EB1CB353B437A5
9B9A23122CA39BEB7D6E999128DA11455F0FB33ACC53643DF1A4E3A9B739C668AFBFA0151D124F162B99B310F265505BB3FC75BDA47D592F78A254A9C893C112
58AB241D7466166814442CC83BCC323EB53D9CC0C9ADC01FD4A1222EB82A9427CF5AB8FA8CF2F02BF0AAB944FB76DEE39A3D9CF19B0C4605FA703C544952D120
068DB29C5A0D1408FD57222D8C2144EBF7B690A5FC04A766BBE02DD5724D9BFFC2803EE235A9B2EB0703FF4272E349A91C2B32B9325FFFBAD68795501FCC939D
B93AA2A8336CB56D3072A46ACEB9FB80BE977AE713230DC414AA00BCA9674C5A17C93B63556FF8FADF822BBEF9FDE6D4035297B9A2219DE3D7DEA4A7A542236A
94C8438AFE6B57DC6358B28044C5CCA91E85C7652EF9A844C48B15FB4BCE3C7E3D11FE7A6F114098F405CCCBFE8E13FDE8D3FEFA543808ED903536AB81A6A91F
0F871239E3D53E7206A572B279F08DBCA4ED589C2ED9015BDB35156A2EDB190318509082C4ADCE1A3870B31CD513275CAE46DE0BFAA8C676906FB8714FCC9A97
3AEDE60A8453B9CBBA5AD0BE2303EFF18E26A6913AC1058D1830A58695E7F6E18785B716D47D422CF48BB5324FDDE39AF2CF32402A5752C4D342DF2FFEA36332
3CAA7E19DE9B7CD3504F90761AB0D75881F4859D35D6CA35B9444B16AD041FCD4DF0AD9A23520133F681A6C67EFF844568635420D93925166B2178B4EE56E1EF
794CF8EA3331BC1A6B9CA74AD36F7F95104A0805B678E838C9DE2B0F2936F7EE7F7905FCB58EE01F6A9069751530E70AF8E217F776C45697366734812751FA7F
AC02B2D19E85674FA1CD3A5AF30CD001D099A066C500212EA6C4F64D8AC4C4EBB00E2824E859997B11F94066C35DD7C372B88E0D286954138A47B2C2B81E3D40
E5C1DC3233889CEB17910BD6C4A8A0AA3273679190631C9F65A9FB15BA9D806A130439F7A58929BC71FAB83976C0D40FC3194288788461E388857452B4F607CD
66FAE21E79761A45548E8DBDAFB7366A5C392C8FAB9D1B301DCE602B025CD70D147E0B6C12D72FD568BAB2076DE32AF586D49113395B5A20313FC2BE7E59C1D0
526081AEFA08B3B77F22FD77B1E3E8ED80DE3EA77847B58C445344380CAC1B996C53F13B56690233DD0E11336B3FA9E91DC4999FED2DD570C8325CF60CD8777A
9E5F7B483FE42E5D6128011A2324608896D442EBEE58D5004F0972815E4C9CA32244A828DB82582B17248872D8A1BEF2E2B3E32DD217893BE0EAF3D0B78E07AB
9628223FC29B0A6BD834C7837D08301FBAC7B07949AB812C54FF3C7074873729B3BA3302B7318C1893061FCAD4E764144B0B00F43E1E8616E513AC1A839E3BA6
E225278BC87340701EC062954C1D92ED563685D3177ED0640DA0C4A41BDD549D3B8ECD11FD063F6A24A60F414C6E2FC0DEE2013A0AA541BB530E142BC37D7BB5
0447E4DF73A7E45379F6E5C8114C8B8DE46809C93ECA4D172F64214B9AC62E37ECC7ACD91E8426B83F58BA3BE4B975AC07A622206F7C2DDF452EA12DC55A7BC1
0F4D69A65E0EC4B52B557CDEB7DBCBA17A2165DC328A5961BDE55E28C955F6BE177E76E862E57ED6CF7F226217F53E3A5B039F01FA45FA9654445774922A4CF7
28112A2FD641C1CAC53D629A6AD72B43AF6FB4EF7EC39F4E176D0E4563266A7D60E3238E3F0CF288EE3734AD60FEDC815E5254AB15B4712F7F1C4E9D999D62F1
6B37D9EFA32B48C33E973A7841C83A36A601E02E7F562134DEAF68B05AE08BD3E917380C191660EAAB4527A485C57345127D8162A31135F76DFBD6768EA2CECD
22939279BC21C8C49EDDC6045A88A332B17E6E7D664BC8D3E5D69F2AAB2359B0A85069D0982187B31E6028C7A3C237FCD1EDFD01DAA4E42ECFEF840127B96F2E
5D2FCBE5560DE13BED254E856D32889C5DF2360662B4089525BDE3C378CA6700EABAA2002F762E7328137A2C945D38FFA2D369FEFED439848E0C0094C8E76079
016B1F58FB833E1CCB5B2C66C09DF2B563FE64492E9EE013AA9C1EDCB3FED0BAD6174F8574575EDA34858D3223C85ECC94A0BBB07DA0EBF1496330F2E120CD2D
B79D8ED0B6803EAF748600028A392488B69007EFD3D148AA59C6AF759078D7F4C42709A4A2151C4DDF73B02EDFE705D1579E76E2373CB81393D19FC505E5614B
6229A3D1A21CB48DCF47DB014CE31C2591B8CE9E540D035C680F09F527B1DE1BC488DCD5F67900BB341230962E472998878F4754CC1F5785E5B8ACEB3EB10F37
AD90D8E6F57AF8330DE656A9B5619081E5CFB608AC3BD30E412289BCA976FE5B60F5DFE393574BC677637B969F838A04062CFF288509BBCE28956CE6A3151848
D034701052CA3F63FF5C2C355D05D4E10C6E429C3E4C872B417E7729328433471BF27957A70D17D816F68B968FCFF7E325A3B855E1E3B872EE21935454A3D22B
CE356FD7C75E9E806739B144144871454FF9814D0A4A3F05FCAC91F33A20E97C230783319972B06D3BA2784D9E91B220B1BDC532B1EDDF6A86A2A294477DB17D
B4767D5E3EA1A29CFE5E13133F429E09A77D166541B9B03A69599C1FEAFA35395F550B35AE4AD878B9048722AECAC3667E3A128A76F8D5D747CB8EA1F6C66570
C19C1806B054B45FE8D8547A05927BA7513B1FE96FF26ABCC875B4C893F811D8D0ACC9CB0800ED4019FC6BE67D83A4DA92D908B5342ECB646C9180DDDDCDC5EA
B76F450F63594886B985BCE4920C3A14EFEC2D422386CA5B837C74277BF15FB16A635EBAD427191E84F92332C09A297ADBD9F09C9B0DDCF10091F7AAED98E8B6
2FE1BFFDEE3E52177E093EFC0AAC477D10E546F06AE516E6272D715C347A94E352828A1A7C343A2D60B22A32922AB9CFD8DCB226A493B96AF7A1DFAE7FFF8229
C208BC14ADD6622857F306507BF03646104F79149E2966EBD0A50B1FFCF72028F3AD1F536F57848DA80D177771A99D78C7BB6ECDC45B0AC212E208F68A2FCB84
3DB04F4059206588764DA8CF024B9C891641B04E3EE98B33BE02A9B301BEC41632EF328876DA6556915E46C568D454AAFD2BA189196AD3CDDC8B970127FB9DEA
039D2F5CD80B2D52B94E480FDC18CAD4C422997A7719D89D968388D46AAB28AA27B30AC88E8DA296FC18CA52B8D5B00DA3E3C84EB359D29CEC2A3E3291BBC564
78C44E3B7123F8360BE943CF7741B49E196DB0A5341DADBA057285008417088BAF89224BBC0336608346CEE693C6CAFD74E2AE8DF0B4675F9C305392610260D7
6E321258910677738CC7A72647CE5A1BC4D475299E2BF9E02A2DFE0FC2731F1FF580DBD965D0C2E459C20811F0EC14D7F6D8FE4194EAEE916C278F5D1A1201D9
5AD9AD8C8AF2D66F448C792E1C283C26598D6F6308F609C961CC1D7D53B21ADA5BE91E25AC4B0F9533B781A4BF8E4DBC24469C0FB65C37E0E539916C01393155
5C664C4F4935BA868E51DFD0C5AB805D747A4D0D0AE03FCE7AFB15FF7C45A198691679B40B0B24FD65E7C6102945D569449443BF40F99B3E0279327F22E57953
938FBE5E5A3932A09EEB69DDE14DB152391AE101F161DAE4BEEF2D86E8B8D406D40958553C859B80052AD75906A4F4E0C59277B92E8BDA0BE76ED85F0C995A8F
5F944126DE3C5CF8E18C5D73F0903E21402F2ADE2C8423E518701CC2806E99B54A67842A30379AEB828F521AD05AFB97484F55DC7F2D9A1A7CD70FD87AA10504
C4EE2EC281251847FC978C9F049C900DD3DED8CA1830357D10ED447C5632266B63371F42EF097A42F44A516A884272884508ECC35225AA07DE578149FCA79647
4CF91299C345C8CABD2B4D5E2B6F4BE283F6F254E503A66B17A9D805C71EB430699B11DAC798ED834E346449C9D614E506E3F3B13604503AEDE99310AEA39A17
22C018BCD52C27B1A5C102BE2E2B0277D288ED6130D8B0004830DE65D0291E6233911B6FDF9A249E3F8512E23007788D46E7892899E45FF264ED8073F0B8ED4D
471B017439E2D0CF0521CAE8C5EA5F1F50912959B236C9FE2A7ADE77AF7B6AA929CE5DC6BED6AF4AD33EB003F2B9220282A446CE6AC57E4B5C485FB3E61839CD
AF1D35CB64FB85F02BC66BE17481E75FFE19B80F3F1D355992667EFBB1964E2B57D2E4A899DD20D8B110AC53B066D743B3E9E2095D03F591B3A11BE77584502A
5F485E0FB1C1D0E49005A64E4BFE50EB6B1CDF68E9888DE2FD5406796BEDC7D6A7F79D6C826A791EE4EF27F0E8500EFE057B54BD3944128A486AC9E3A8111F3A
5FF33D5A137439A1003DCC65740A922C9C1F9E45E8B22E196A94D2958DB865C9866E2156A74069C8B16A895B149ED0E890DCF4C4AA75EA4043910E694EAAF164
E307CAF0532B516D6DA70EA25606EBBFCD732947B74459BD91E862845C46B3A4DEF657730442D5C9C4A334428D7449604693BDE6785A3C6B0AC6A5DF6D654154
9BF16BBF7D942742C771228FF934AD2B017E1D3A9EB24A1DE1EEAC6A070CD3A1CFB23AC94FBD2CB7BBE44D392EDAAF1F89196410C72EB0C2D6E8ECF0C74A8CCB
06DFBEE08AB1CC57E218F55FE2C193453614CBE3D8BFF906A561AEC0CB960A89B4AC767FD846A32A3944D357B12BB62757C3DEE94BAED7C5E42BABFDC8202AE3
39BEA09F994CBA809049ABBBAF7F8E6BDD2CAD3F8D1FF79E77DDEBF35C2462CAC808BE0B6D5CC0FDD7BA66EA1C1617626B8A4D10FFE24279B65EDF575568A4A3
898A54DF910F4AFD2C15F71745DBD66F3863CFBDCF21F30703CF93E0BA65947C1D7A9CA8EA7E17B99511CFEB7AA3548BC9397894498821FBD73E372E39FB6C8D
B95BE7189017C2799168599ECB3780680764973F47C12DB932A7BE99815A33F318017F25DAAB6849238BC86C0419FC334CB24DDC456FD30A739244D004BA78CF
5E0F21A2D418F782B7F1BF2075C2682D317F9FB74FF2A89EBEB118AD28F34C96B038D8F2CFC83AE9296E1B7B42E21115CCC4637E770FCC603939EB622B934EDC
EC1C83382B910A76FA73FD611C84F27557D42772A580DE3ED863AEA7F075E29E41A3B7C9089F9E4BD3D5A0EF8E4C529F9945A616BC7C6B533BD04F97A3E8A1AD
0C36E561F03E8685EC0AC24282534752F54EA1C7F24E8A9692B9D1299D0F825ABAD3961CC42A67C910E557EFB19BA602246FCA34B65D83A6AD0F12A10D8F574E
6986042E73E7259AB03F44BB2CC04A36CA4C979DE30A4B80382A7C6F09D60EE8DC1A7BEBD634DE0BC99C2C45E6B2276206E6F28A352CB134FFB7BF660668733D
CB410290DC4598D9DC0E3AC5E898C30039DD1CE8F3B489FEBB9C3B09516B2FF6DC73D1C0049DABB329A1EC95928CBA42ED0229FD8933D1B507CC139F061431D4
6183EB429D2B48A879EEDABBCA9F18796557612F99AC63293FE097A36B8CA17E01F7B9770BE376154193BC2C533912A5F08402C88265635005FE5E81B305FC0C
B70A0D8FB62E078FA0B140F99A87157EBE49F755B222F0C2A54C7B7E2AF449004601B6377AF78699EAE0211B77576AA3F3C06A8292FDFE1F1D654433813A1E2F
6AB80AD649A50EAACB59F81A83FBBAE904EF747F4EE5B6FCB27CE1C0E5B32F9243468D50448089E07A090029910C3C2CC18BA419F06836A56F1A54F8A7839651
FA512F4C3699A558A0CC39536500C379189A203DEB500C2C5AE55772CFFE49005671DE19DACADAC7F5DE28138871A57E5968A2DDD24A06DC14527FC75693E714
6F5324B1D2E7D48759D1BDBF2D41984E6D3CADF8EA30CFDC537ED3D5591C461A36ADF23D76E569FB3F6EE155A381022D497455B19BC5ED1182C6BCDACBBCC62D
6016A213E51B37CF5ACF3BC27F377B9E913F4831F37AACCB6236
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
333 474 556 556 889 722 238 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 333 333 584 584 584 611 975 
722 722 722 722 667 611 778 722 278 556 722 611 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 333 278 333 584 556 333 
556 611 556 611 556 333 611 611 278 278 556 278 889 611 611 611 
611 389 556 333 611 556 778 556 556 500 389 280 389 584 750 556 
750 278 556 500 1000 556 556 333 1000 667 333 1000 750 611 750 750 
278 278 500 500 350 556 1000 333 1000 556 333 944 750 500 667 278 
333 556 556 556 556 280 556 333 737 370 556 584 333 737 552 400 
549 333 333 333 576 556 333 333 333 365 556 834 834 834 611 722 
722 722 722 722 722 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 556 556 556 556 556 278 278 278 278 611 
611 611 611 611 611 611 549 611 611 611 611 611 556 611 556 ]
CorelDrawReencodeVect /_R231750-ArialMT-Bold /ArialMT-Bold Z

end
%%EndSetup
%EndDocumentSetup


%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 594 842
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
userdict begin
end
@sv
%%EndPageSetup
@rax %Note: Object
43.18526 191.18778 560.06419 237.52630 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
43.18526 237.52630 m
560.06419 237.52630 L
560.06419 191.18778 L
43.18526 191.18778 L
43.18526 237.52630 L
@c
S

@rax %Note: Object
384.59112 190.50633 384.76148 237.52630 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
384.76148 237.52630 m
384.59112 190.50633 L
S

@rax 283.76277 218.98715 329.76057 227.71701 @E
[0.00032111 0.00000000 0.00000000 0.00028346 283.76276127 219.12717309] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 42333.00000 z
0 0 (Internet) @t
T
@rax 240.15005 200.38847 373.29024 211.36224 @E
[0.00032111 0.00000000 0.00000000 0.00028346 240.15003846 202.77240203] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 42333.00000 z
0 0 (www) @t
89378 0 (.compesa.com.br) @t
T
@rax 419.18683 203.68942 527.62054 229.52183 @E
[0.00028346 0.00000000 0.00000000 0.00028346 473.66388819 219.50021244] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 49389.00000 z
-192183 0 (T) @t
-167489 0 (ele-Atendimento) @t
-167527 -55176 (0800-081-0195) @t
T
@rax %Note: Object
42.84454 31.50340 559.72346 184.48214 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
42.84454 184.48214 m
559.72346 184.48214 L
559.72346 31.50340 L
42.84454 31.50340 L
42.84454 184.48214 L
@c
S

@rax 49.14794 155.87518 487.14917 178.15946 @E
[0.00028439 0.00000000 0.00000000 0.00028346 49.14793521 168.29772613] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 38806.00000 z
0 0 (CONSUL) @t
158846 0 (TE,) @t
227857 0 (A) @t
250863 0 (TRA) @t
325597 0 (V\311S  DO) @t
493105 0 (TELEA) @t
613166 0 (TENDIMENT) @t
838822 0 (O  \0500800-081-0195\051, O ENDERE\307O  DO) @t
0 -43352 (ESCRIT\323RIO DA) @t
314809 -43352 (COMPESA) @t
517520 -43352 (MAIS PR\323XIMO  DA) @t
890559 -43352 (SUA) @t
978992 -43352 (RESID\312NCIA.) @t
T
@rax 219.33978 111.75789 376.30063 125.65304 @E
[0.00028346 0.00000000 0.00000000 0.00028346 219.33977150 114.91539737] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT-Bold 52917.00000 z
0 0 (Pague a conta em dia!) @t
T
@rax 47.95540 60.24614 457.08576 91.08170 @E
[0.00028346 0.00000000 0.00000000 0.00028346 47.95539982 80.16150888] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT-Bold 52917.00000 z
0 0 (Evite o pagamento de acr\351scimos por impontualidade!) @t
0 -59118 (O atraso no pagamento leva a a\347\365es de cobran\347a e corte.) @t
T
@rax 229.40306 361.70079 431.78967 371.85165 @E
[-0.00027332 0.00000000 0.00000000 -0.00028346 431.78965902 371.67589192] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT-Bold 48954.00000 z
0 0 (T) @t
26272 0 (eleatendimento: 0800 081 0195) @t
T
@rax 262.05506 433.57323 368.28227 443.33376 @E
[-0.00027298 0.00000000 0.00000000 -0.00028346 368.28225424 441.49179487] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT-Bold 31750.00000 z
0 0 (MOTIVO DA) @t
187552 0 (DEVOLU\307\303O) @t
T
@rax 346.60517 455.47115 451.64523 484.02652 @E
[-0.00031284 0.00000000 0.00000000 -0.00028346 451.64521183 462.02313271] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 31750.00000 z
0 0 (\050  \051Mudou-se) @t
0 -35470 (\050  \051Endere\347o Inexistente) @t
0 -70940 (\050  \051N\343o existe o n\372mero) @t
T
@rax 231.38787 463.10995 303.77083 481.61083 @E
[-0.00030308 0.00000000 0.00000000 -0.00028346 303.77081979 469.66193558] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
e
/_R231750-ArialMT 31750.00000 z
0 0 (\050  \051Abandonado) @t
0 -35470 (\050  \051Desconhecido) @t
T
%%PageTrailer
@rs
@rs
%EndScript
%%Trailer
@EndSysCorelDict
end
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset wCorel15Dict 15.0 0
%%+ font ArialMT
%%+ font ArialMT-Bold

%%EndDocument

LH
%%Trailer
%%BoundingBox: 12 12 583 830
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_WinNT_Min 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
Pscript_WinNT_Min dup /min_terminate get exec
%%EOF
